# Makefile.in generated by automake 1.9.6 from Makefile.am.
# opendsim-core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  OpenDSIM (A/D mixed circuit simulator)
#  Copyleft (C) 2016, The first Middle School in Yongsheng Lijiang China
#
#  This project is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public License(GPL)
#  as published by the Free Software Foundation; either version 2.1
#  of the License, or (at your option) any later version.
#
#  This project is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/opendsim
pkglibdir = $(libdir)/opendsim
pkgincludedir = $(includedir)/opendsim
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
LIBOBJDIR =
subdir = opendsim-core
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	AUTHORS COPYING ChangeLog NEWS THANKS TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libdsim_la_LIBADD =
am_libdsim_la_OBJECTS = libdsim_la-logtrace.lo libdsim_la-string.lo \
	libdsim_la-sys-memory.lo libdsim_la-sys-memory-cpp.lo \
	libdsim_la-hashmap.lo libdsim_la-list.lo libdsim_la-rbtree.lo \
	libdsim_la-prime.lo libdsim_la-bound.lo libdsim_la-errors.lo \
	libdsim_la-lisp-buffer.lo libdsim_la-lisp-fault.lo \
	libdsim_la-lisp-lexer.lo libdsim_la-lisp-parser.lo \
	libdsim_la-lisp.lo libdsim_la-circmatrix.lo \
	libdsim_la-circuit.lo libdsim_la-circ-pin.lo \
	libdsim_la-circ-node.lo libdsim_la-circ-element.lo
libdsim_la_OBJECTS = $(am_libdsim_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdsim_la_SOURCES)
DIST_SOURCES = $(libdsim_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} D:\OpenDSIM-0.1/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} D:\OpenDSIM-0.1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} D:\OpenDSIM-0.1/missing --run autoconf
AUTOHEADER = ${SHELL} D:\OpenDSIM-0.1/missing --run autoheader
AUTOMAKE = ${SHELL} D:\OpenDSIM-0.1/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -I/usr/local/include/harfbuzz -std=c99 -pipe -W -Wall -Wmissing-prototypes
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -pipe -fno-exceptions -Wno-deprecated-register -W -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = .exe
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = d:/mingw/i686-w64-mingw32/bin/ld.exe
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -pR
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} D:\OpenDSIM-0.1/missing --run makeinfo
MANIFEST_TOOL = :
MOC = /f/documents/Qt/Qt5.5.1/5.5/mingw492_32/bin/moc
NM = /mingw/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = opendsim
PACKAGE_BUGREPORT = diyer175@hotmail.com
PACKAGE_NAME = OpenDSIM
PACKAGE_STRING = OpenDSIM 0.0.1
PACKAGE_TARNAME = opendsim
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
PYTHON = python
QT_INCLUDES = -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtWidgets -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtGui -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtCore -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtSvg -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtXml -IF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/include/QtScript -DQT_DEBUG -DQT_THREAD_SUPPORT -D_REENTRANT -mthreads -DQT_DLL -DUNICODE
QT_LDFLAGS = -LF:/documents/Qt/Qt5.5.1/5.5/mingw492_32/lib  -mthreads -mwindows
QT_LIBS = -lQt5Widgets -lQt5Core -lQt5Gui -lQt5Xml -lQt5Svg -lQt5Script
RANLIB = ranlib
RCC = /f/documents/Qt/Qt5.5.1/5.5/mingw492_32/bin/rcc
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UIC = /f/documents/Qt/Qt5.5.1/5.5/mingw492_32/bin/uic
VERSION = 0.0.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = D:\OpenDSIM-0.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = D:/OpenDSIM-0.1/out
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
INCLUDES = -I$(top_builddir)/include      \
           -I$(top_srcdir)/include        \
           -I$(top_builddir)/opendsim-core  \
           -I$(top_builddir)/opendsim-frontend

lib_LTLIBRARIES = libdsim.la
libdsim_la_SOURCES = util/logtrace.c \
                util/string.c \
                util/sys-memory.c \
                util/sys-memory-cpp.cxx \
                util/hashmap.c \
                util/list.c \
                util/rbtree.c \
                util/prime.c \
                util/bound.c \
                util/errors.c \
                scheme-intr/lisp-buffer.c \
                scheme-intr/lisp-fault.c \
                scheme-intr/lisp-lexer.c \
                scheme-intr/lisp-parser.c \
                scheme-intr/lisp.c \
                math/circ-matrix/circmatrix.c \
                circuit/circuit.c \
                circuit/circ-pin.c \
                circuit/circ-node.c \
                circuit/circ-element.c

libdsim_la_CFLAGS = -Wno-unused-function
libdsim_la_CPPFLAGS = -Wno-unused-function
BUILT_SOURCES = errors-generated.h version-generated.h
CLEANFILES = errors-generated.h version-generated.h
SUBDIRS = models

#
# Generate version infomation
#
appName = OpenDSIM (A/D mixed circuit simulator)
appNameShort = OpenDSIM
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  opendsim-core/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  opendsim-core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdsim.la: $(libdsim_la_OBJECTS) $(libdsim_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libdsim_la_LDFLAGS) $(libdsim_la_OBJECTS) $(libdsim_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libdsim_la-bound.Plo
include ./$(DEPDIR)/libdsim_la-circ-element.Plo
include ./$(DEPDIR)/libdsim_la-circ-node.Plo
include ./$(DEPDIR)/libdsim_la-circ-pin.Plo
include ./$(DEPDIR)/libdsim_la-circmatrix.Plo
include ./$(DEPDIR)/libdsim_la-circuit.Plo
include ./$(DEPDIR)/libdsim_la-errors.Plo
include ./$(DEPDIR)/libdsim_la-hashmap.Plo
include ./$(DEPDIR)/libdsim_la-lisp-buffer.Plo
include ./$(DEPDIR)/libdsim_la-lisp-fault.Plo
include ./$(DEPDIR)/libdsim_la-lisp-lexer.Plo
include ./$(DEPDIR)/libdsim_la-lisp-parser.Plo
include ./$(DEPDIR)/libdsim_la-lisp.Plo
include ./$(DEPDIR)/libdsim_la-list.Plo
include ./$(DEPDIR)/libdsim_la-logtrace.Plo
include ./$(DEPDIR)/libdsim_la-prime.Plo
include ./$(DEPDIR)/libdsim_la-rbtree.Plo
include ./$(DEPDIR)/libdsim_la-string.Plo
include ./$(DEPDIR)/libdsim_la-sys-memory-cpp.Plo
include ./$(DEPDIR)/libdsim_la-sys-memory.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libdsim_la-logtrace.lo: util/logtrace.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-logtrace.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-logtrace.Tpo" -c -o libdsim_la-logtrace.lo `test -f 'util/logtrace.c' || echo '$(srcdir)/'`util/logtrace.c; \
	then mv -f "$(DEPDIR)/libdsim_la-logtrace.Tpo" "$(DEPDIR)/libdsim_la-logtrace.Plo"; else rm -f "$(DEPDIR)/libdsim_la-logtrace.Tpo"; exit 1; fi
#	source='util/logtrace.c' object='libdsim_la-logtrace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-logtrace.lo `test -f 'util/logtrace.c' || echo '$(srcdir)/'`util/logtrace.c

libdsim_la-string.lo: util/string.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-string.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-string.Tpo" -c -o libdsim_la-string.lo `test -f 'util/string.c' || echo '$(srcdir)/'`util/string.c; \
	then mv -f "$(DEPDIR)/libdsim_la-string.Tpo" "$(DEPDIR)/libdsim_la-string.Plo"; else rm -f "$(DEPDIR)/libdsim_la-string.Tpo"; exit 1; fi
#	source='util/string.c' object='libdsim_la-string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-string.lo `test -f 'util/string.c' || echo '$(srcdir)/'`util/string.c

libdsim_la-sys-memory.lo: util/sys-memory.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-sys-memory.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-sys-memory.Tpo" -c -o libdsim_la-sys-memory.lo `test -f 'util/sys-memory.c' || echo '$(srcdir)/'`util/sys-memory.c; \
	then mv -f "$(DEPDIR)/libdsim_la-sys-memory.Tpo" "$(DEPDIR)/libdsim_la-sys-memory.Plo"; else rm -f "$(DEPDIR)/libdsim_la-sys-memory.Tpo"; exit 1; fi
#	source='util/sys-memory.c' object='libdsim_la-sys-memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-sys-memory.lo `test -f 'util/sys-memory.c' || echo '$(srcdir)/'`util/sys-memory.c

libdsim_la-hashmap.lo: util/hashmap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-hashmap.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-hashmap.Tpo" -c -o libdsim_la-hashmap.lo `test -f 'util/hashmap.c' || echo '$(srcdir)/'`util/hashmap.c; \
	then mv -f "$(DEPDIR)/libdsim_la-hashmap.Tpo" "$(DEPDIR)/libdsim_la-hashmap.Plo"; else rm -f "$(DEPDIR)/libdsim_la-hashmap.Tpo"; exit 1; fi
#	source='util/hashmap.c' object='libdsim_la-hashmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-hashmap.lo `test -f 'util/hashmap.c' || echo '$(srcdir)/'`util/hashmap.c

libdsim_la-list.lo: util/list.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-list.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-list.Tpo" -c -o libdsim_la-list.lo `test -f 'util/list.c' || echo '$(srcdir)/'`util/list.c; \
	then mv -f "$(DEPDIR)/libdsim_la-list.Tpo" "$(DEPDIR)/libdsim_la-list.Plo"; else rm -f "$(DEPDIR)/libdsim_la-list.Tpo"; exit 1; fi
#	source='util/list.c' object='libdsim_la-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-list.lo `test -f 'util/list.c' || echo '$(srcdir)/'`util/list.c

libdsim_la-rbtree.lo: util/rbtree.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-rbtree.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-rbtree.Tpo" -c -o libdsim_la-rbtree.lo `test -f 'util/rbtree.c' || echo '$(srcdir)/'`util/rbtree.c; \
	then mv -f "$(DEPDIR)/libdsim_la-rbtree.Tpo" "$(DEPDIR)/libdsim_la-rbtree.Plo"; else rm -f "$(DEPDIR)/libdsim_la-rbtree.Tpo"; exit 1; fi
#	source='util/rbtree.c' object='libdsim_la-rbtree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-rbtree.lo `test -f 'util/rbtree.c' || echo '$(srcdir)/'`util/rbtree.c

libdsim_la-prime.lo: util/prime.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-prime.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-prime.Tpo" -c -o libdsim_la-prime.lo `test -f 'util/prime.c' || echo '$(srcdir)/'`util/prime.c; \
	then mv -f "$(DEPDIR)/libdsim_la-prime.Tpo" "$(DEPDIR)/libdsim_la-prime.Plo"; else rm -f "$(DEPDIR)/libdsim_la-prime.Tpo"; exit 1; fi
#	source='util/prime.c' object='libdsim_la-prime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-prime.lo `test -f 'util/prime.c' || echo '$(srcdir)/'`util/prime.c

libdsim_la-bound.lo: util/bound.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-bound.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-bound.Tpo" -c -o libdsim_la-bound.lo `test -f 'util/bound.c' || echo '$(srcdir)/'`util/bound.c; \
	then mv -f "$(DEPDIR)/libdsim_la-bound.Tpo" "$(DEPDIR)/libdsim_la-bound.Plo"; else rm -f "$(DEPDIR)/libdsim_la-bound.Tpo"; exit 1; fi
#	source='util/bound.c' object='libdsim_la-bound.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-bound.lo `test -f 'util/bound.c' || echo '$(srcdir)/'`util/bound.c

libdsim_la-errors.lo: util/errors.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-errors.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-errors.Tpo" -c -o libdsim_la-errors.lo `test -f 'util/errors.c' || echo '$(srcdir)/'`util/errors.c; \
	then mv -f "$(DEPDIR)/libdsim_la-errors.Tpo" "$(DEPDIR)/libdsim_la-errors.Plo"; else rm -f "$(DEPDIR)/libdsim_la-errors.Tpo"; exit 1; fi
#	source='util/errors.c' object='libdsim_la-errors.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-errors.lo `test -f 'util/errors.c' || echo '$(srcdir)/'`util/errors.c

libdsim_la-lisp-buffer.lo: scheme-intr/lisp-buffer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-lisp-buffer.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-lisp-buffer.Tpo" -c -o libdsim_la-lisp-buffer.lo `test -f 'scheme-intr/lisp-buffer.c' || echo '$(srcdir)/'`scheme-intr/lisp-buffer.c; \
	then mv -f "$(DEPDIR)/libdsim_la-lisp-buffer.Tpo" "$(DEPDIR)/libdsim_la-lisp-buffer.Plo"; else rm -f "$(DEPDIR)/libdsim_la-lisp-buffer.Tpo"; exit 1; fi
#	source='scheme-intr/lisp-buffer.c' object='libdsim_la-lisp-buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-lisp-buffer.lo `test -f 'scheme-intr/lisp-buffer.c' || echo '$(srcdir)/'`scheme-intr/lisp-buffer.c

libdsim_la-lisp-fault.lo: scheme-intr/lisp-fault.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-lisp-fault.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-lisp-fault.Tpo" -c -o libdsim_la-lisp-fault.lo `test -f 'scheme-intr/lisp-fault.c' || echo '$(srcdir)/'`scheme-intr/lisp-fault.c; \
	then mv -f "$(DEPDIR)/libdsim_la-lisp-fault.Tpo" "$(DEPDIR)/libdsim_la-lisp-fault.Plo"; else rm -f "$(DEPDIR)/libdsim_la-lisp-fault.Tpo"; exit 1; fi
#	source='scheme-intr/lisp-fault.c' object='libdsim_la-lisp-fault.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-lisp-fault.lo `test -f 'scheme-intr/lisp-fault.c' || echo '$(srcdir)/'`scheme-intr/lisp-fault.c

libdsim_la-lisp-lexer.lo: scheme-intr/lisp-lexer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-lisp-lexer.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-lisp-lexer.Tpo" -c -o libdsim_la-lisp-lexer.lo `test -f 'scheme-intr/lisp-lexer.c' || echo '$(srcdir)/'`scheme-intr/lisp-lexer.c; \
	then mv -f "$(DEPDIR)/libdsim_la-lisp-lexer.Tpo" "$(DEPDIR)/libdsim_la-lisp-lexer.Plo"; else rm -f "$(DEPDIR)/libdsim_la-lisp-lexer.Tpo"; exit 1; fi
#	source='scheme-intr/lisp-lexer.c' object='libdsim_la-lisp-lexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-lisp-lexer.lo `test -f 'scheme-intr/lisp-lexer.c' || echo '$(srcdir)/'`scheme-intr/lisp-lexer.c

libdsim_la-lisp-parser.lo: scheme-intr/lisp-parser.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-lisp-parser.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-lisp-parser.Tpo" -c -o libdsim_la-lisp-parser.lo `test -f 'scheme-intr/lisp-parser.c' || echo '$(srcdir)/'`scheme-intr/lisp-parser.c; \
	then mv -f "$(DEPDIR)/libdsim_la-lisp-parser.Tpo" "$(DEPDIR)/libdsim_la-lisp-parser.Plo"; else rm -f "$(DEPDIR)/libdsim_la-lisp-parser.Tpo"; exit 1; fi
#	source='scheme-intr/lisp-parser.c' object='libdsim_la-lisp-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-lisp-parser.lo `test -f 'scheme-intr/lisp-parser.c' || echo '$(srcdir)/'`scheme-intr/lisp-parser.c

libdsim_la-lisp.lo: scheme-intr/lisp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-lisp.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-lisp.Tpo" -c -o libdsim_la-lisp.lo `test -f 'scheme-intr/lisp.c' || echo '$(srcdir)/'`scheme-intr/lisp.c; \
	then mv -f "$(DEPDIR)/libdsim_la-lisp.Tpo" "$(DEPDIR)/libdsim_la-lisp.Plo"; else rm -f "$(DEPDIR)/libdsim_la-lisp.Tpo"; exit 1; fi
#	source='scheme-intr/lisp.c' object='libdsim_la-lisp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-lisp.lo `test -f 'scheme-intr/lisp.c' || echo '$(srcdir)/'`scheme-intr/lisp.c

libdsim_la-circmatrix.lo: math/circ-matrix/circmatrix.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-circmatrix.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-circmatrix.Tpo" -c -o libdsim_la-circmatrix.lo `test -f 'math/circ-matrix/circmatrix.c' || echo '$(srcdir)/'`math/circ-matrix/circmatrix.c; \
	then mv -f "$(DEPDIR)/libdsim_la-circmatrix.Tpo" "$(DEPDIR)/libdsim_la-circmatrix.Plo"; else rm -f "$(DEPDIR)/libdsim_la-circmatrix.Tpo"; exit 1; fi
#	source='math/circ-matrix/circmatrix.c' object='libdsim_la-circmatrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-circmatrix.lo `test -f 'math/circ-matrix/circmatrix.c' || echo '$(srcdir)/'`math/circ-matrix/circmatrix.c

libdsim_la-circuit.lo: circuit/circuit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-circuit.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-circuit.Tpo" -c -o libdsim_la-circuit.lo `test -f 'circuit/circuit.c' || echo '$(srcdir)/'`circuit/circuit.c; \
	then mv -f "$(DEPDIR)/libdsim_la-circuit.Tpo" "$(DEPDIR)/libdsim_la-circuit.Plo"; else rm -f "$(DEPDIR)/libdsim_la-circuit.Tpo"; exit 1; fi
#	source='circuit/circuit.c' object='libdsim_la-circuit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-circuit.lo `test -f 'circuit/circuit.c' || echo '$(srcdir)/'`circuit/circuit.c

libdsim_la-circ-pin.lo: circuit/circ-pin.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-circ-pin.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-circ-pin.Tpo" -c -o libdsim_la-circ-pin.lo `test -f 'circuit/circ-pin.c' || echo '$(srcdir)/'`circuit/circ-pin.c; \
	then mv -f "$(DEPDIR)/libdsim_la-circ-pin.Tpo" "$(DEPDIR)/libdsim_la-circ-pin.Plo"; else rm -f "$(DEPDIR)/libdsim_la-circ-pin.Tpo"; exit 1; fi
#	source='circuit/circ-pin.c' object='libdsim_la-circ-pin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-circ-pin.lo `test -f 'circuit/circ-pin.c' || echo '$(srcdir)/'`circuit/circ-pin.c

libdsim_la-circ-node.lo: circuit/circ-node.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-circ-node.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-circ-node.Tpo" -c -o libdsim_la-circ-node.lo `test -f 'circuit/circ-node.c' || echo '$(srcdir)/'`circuit/circ-node.c; \
	then mv -f "$(DEPDIR)/libdsim_la-circ-node.Tpo" "$(DEPDIR)/libdsim_la-circ-node.Plo"; else rm -f "$(DEPDIR)/libdsim_la-circ-node.Tpo"; exit 1; fi
#	source='circuit/circ-node.c' object='libdsim_la-circ-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-circ-node.lo `test -f 'circuit/circ-node.c' || echo '$(srcdir)/'`circuit/circ-node.c

libdsim_la-circ-element.lo: circuit/circ-element.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -MT libdsim_la-circ-element.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-circ-element.Tpo" -c -o libdsim_la-circ-element.lo `test -f 'circuit/circ-element.c' || echo '$(srcdir)/'`circuit/circ-element.c; \
	then mv -f "$(DEPDIR)/libdsim_la-circ-element.Tpo" "$(DEPDIR)/libdsim_la-circ-element.Plo"; else rm -f "$(DEPDIR)/libdsim_la-circ-element.Tpo"; exit 1; fi
#	source='circuit/circ-element.c' object='libdsim_la-circ-element.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(libdsim_la_CFLAGS) $(CFLAGS) -c -o libdsim_la-circ-element.lo `test -f 'circuit/circ-element.c' || echo '$(srcdir)/'`circuit/circ-element.c

.cxx.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libdsim_la-sys-memory-cpp.lo: util/sys-memory-cpp.cxx
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libdsim_la-sys-memory-cpp.lo -MD -MP -MF "$(DEPDIR)/libdsim_la-sys-memory-cpp.Tpo" -c -o libdsim_la-sys-memory-cpp.lo `test -f 'util/sys-memory-cpp.cxx' || echo '$(srcdir)/'`util/sys-memory-cpp.cxx; \
	then mv -f "$(DEPDIR)/libdsim_la-sys-memory-cpp.Tpo" "$(DEPDIR)/libdsim_la-sys-memory-cpp.Plo"; else rm -f "$(DEPDIR)/libdsim_la-sys-memory-cpp.Tpo"; exit 1; fi
#	source='util/sys-memory-cpp.cxx' object='libdsim_la-sys-memory-cpp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdsim_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libdsim_la-sys-memory-cpp.lo `test -f 'util/sys-memory-cpp.cxx' || echo '$(srcdir)/'`util/sys-memory-cpp.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES


#
# Generate the status code descriptors.
#
errors-generated.h: \
		util/errors.sed \
		$(top_builddir)/include/dsim/error.h    
	$(SED) -f $< $(filter %.h,$^) > $@

version-generated.h:
	$(PYTHON) "$(top_builddir)/scripts/gen-version.py" \
       "$(appName)" "$(appNameShort)" \
       "$(appVersionMajor)" "$(appVersionMinor)" "$(appVersionBuild)" \
       version-generated.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
